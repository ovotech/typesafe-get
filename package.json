{
  "name": "@ovotech/re-mixpanel",
  "description": "A typesafe way to get nested properties when any parent property might be undefined, while we wait for the optional chaining operator to finally exist",
  "main": "dist/cjs/index.js",
  "module": "dist/es/index.js",
  "source": "src/index.ts",
  "types": "dist/types/index.d.ts",
  "repository": "git@github.com:ovotech/re-mixpanel.git",
  "author": "Tim Perry <pimterry@gmail.com>",
  "contributors": [
    "Ivan Kerin <ikerin@gmail.com>"
  ],
  "license": "MIT",
  "scripts": {
    "test": "jest",
    "lint": "tslint -c tslint.json 'src/**/*.ts'",
    "build-cjs": "tsc --outDir dist/cjs/",
    "build-es": "tsc --outDir dist/es/ --module esnext --declaration --declarationDir dist/types/",
    "build": "yarn build-cjs && yarn build-es"
  },
  "devDependencies": {
    "@types/jest": "^22.2.3",
    "jest": "^22.4.3",
    "jest-junit": "^3.6.0",
    "prettier": "^1.12.0",
    "ts-jest": "^23.6.0",
    "tslint": "^5.9.1",
    "typescript": "^2.8.1"
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "testURL": "http://localhost/"
  },
  "dependencies": {}
}
